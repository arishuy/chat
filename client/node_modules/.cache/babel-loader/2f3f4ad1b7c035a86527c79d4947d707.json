{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Axios from \"axios\";\nexport const loginAsync = createAsyncThunk(\"auth/loginAsync\", async payload => {\n  console.log(payload);\n  const response = await Axios.post(\"http://localhost:5000/api/auth/login\", payload);\n  localStorage.setItem(\"token\", response.data.token);\n  const user = response.data;\n  console.log(user);\n  return user;\n}); // export const AddNewTaskAsync = createAsyncThunk(\n//   \"tasks/AddNewTaskAsync\",\n//   async (payload) => {\n//     const response = await Axios.post(\n//       \"http://localhost:5000/api/v1/tasks\",\n//       payload\n//     );\n//     const task = response.data;\n//     return task;\n//   }\n// );\n// export const deleteTaskAsync = createAsyncThunk(\n//   \"tasks/deleteTaskAsync\",\n//   async (payload) => {\n//     const id = payload.id;\n//     const response = await Axios.delete(\n//       `http://localhost:5000/api/v1/tasks/${id}`\n//     );\n//     return payload;\n//   }\n// );\n// export const toggleIsdoneAsync = createAsyncThunk(\n//   \"tasks/toggleIsdoneAsync\",\n//   async (payload) => {\n//     const id = payload.id;\n//     const newPayload = {\n//       content: payload.content,\n//       isdone: payload.isdone,\n//     };\n//     const response = await Axios.patch(\n//       `http://localhost:5000/api/v1/tasks/${id}`,\n//       { content: payload.content, isdone: payload.isdone }\n//     );\n//     console.log(newPayload);\n//     return payload;\n//   }\n// );\n\nconst AuthSlice = createSlice({\n  name: \"auth\",\n  initialState: [],\n  reducers: {},\n  extraReducers: {\n    [loginAsync.fulfilled]: (state, action) => {\n      console.log(\"fetching data successfully\");\n      return action.payload.user;\n    }\n  }\n}); //export const { login } = AuthSlice.actions;\n\nexport default AuthSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Axios","loginAsync","payload","console","log","response","post","localStorage","setItem","data","token","user","AuthSlice","name","initialState","reducers","extraReducers","fulfilled","state","action","reducer"],"sources":["D:/WEB CODE LIB/Chat-App/chat/client/src/redux/Slices/AuthSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Axios from \"axios\";\r\n\r\n\r\nexport const loginAsync = createAsyncThunk(\r\n    \"auth/loginAsync\",\r\n  async (payload) => { \r\n      console.log(payload);\r\n    const response = await Axios.post(\"http://localhost:5000/api/auth/login\", payload);\r\n    localStorage.setItem(\"token\",response.data.token);\r\n    const user = response.data;\r\n     console.log(user);\r\n        return user;\r\n    }\r\n)\r\n// export const AddNewTaskAsync = createAsyncThunk(\r\n//   \"tasks/AddNewTaskAsync\",\r\n//   async (payload) => {\r\n//     const response = await Axios.post(\r\n//       \"http://localhost:5000/api/v1/tasks\",\r\n//       payload\r\n//     );\r\n//     const task = response.data;\r\n//     return task;\r\n//   }\r\n// );\r\n// export const deleteTaskAsync = createAsyncThunk(\r\n//   \"tasks/deleteTaskAsync\",\r\n//   async (payload) => {\r\n//     const id = payload.id;\r\n//     const response = await Axios.delete(\r\n//       `http://localhost:5000/api/v1/tasks/${id}`\r\n//     );\r\n//     return payload;\r\n//   }\r\n// );\r\n// export const toggleIsdoneAsync = createAsyncThunk(\r\n//   \"tasks/toggleIsdoneAsync\",\r\n//   async (payload) => {\r\n//     const id = payload.id;\r\n//     const newPayload = {\r\n//       content: payload.content,\r\n//       isdone: payload.isdone,\r\n//     };\r\n//     const response = await Axios.patch(\r\n//       `http://localhost:5000/api/v1/tasks/${id}`,\r\n//       { content: payload.content, isdone: payload.isdone }\r\n//     );\r\n//     console.log(newPayload);\r\n//     return payload;\r\n//   }\r\n// );\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: [],\r\n  reducers: {},\r\n  extraReducers: {\r\n    [loginAsync.fulfilled]: (state, action) => {\r\n      console.log(\"fetching data successfully\");\r\n      \r\n      return action.payload.user;\r\n    },\r\n  },\r\n});\r\n//export const { login } = AuthSlice.actions;\r\nexport default AuthSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CACtC,iBADsC,EAExC,MAAOG,OAAP,IAAmB;EACfC,OAAO,CAACC,GAAR,CAAYF,OAAZ;EACF,MAAMG,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAN,CAAW,sCAAX,EAAmDJ,OAAnD,CAAvB;EACAK,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BH,QAAQ,CAACI,IAAT,CAAcC,KAA3C;EACA,MAAMC,IAAI,GAAGN,QAAQ,CAACI,IAAtB;EACCN,OAAO,CAACC,GAAR,CAAYO,IAAZ;EACG,OAAOA,IAAP;AACH,CATqC,CAAnC,C,CAWP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAGd,WAAW,CAAC;EAC5Be,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE,EAFc;EAG5BC,QAAQ,EAAE,EAHkB;EAI5BC,aAAa,EAAE;IACb,CAACf,UAAU,CAACgB,SAAZ,GAAwB,CAACC,KAAD,EAAQC,MAAR,KAAmB;MACzChB,OAAO,CAACC,GAAR,CAAY,4BAAZ;MAEA,OAAOe,MAAM,CAACjB,OAAP,CAAeS,IAAtB;IACD;EALY;AAJa,CAAD,CAA7B,C,CAYA;;AACA,eAAeC,SAAS,CAACQ,OAAzB"},"metadata":{},"sourceType":"module"}